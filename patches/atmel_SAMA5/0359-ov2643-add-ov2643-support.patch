From 8ebc8657ba9c8ce1d844d8b70fa4d6e7fbe05827 Mon Sep 17 00:00:00 2001
From: Josh Wu <josh.wu@atmel.com>
Date: Wed, 18 Sep 2013 16:59:18 +0800
Subject: [PATCH 359/382] ov2643: add ov2643 support

Signed-off-by: Josh Wu <josh.wu@atmel.com>
---
 drivers/media/video/ov2640.c    |  60 +++-
 drivers/media/video/ov2643.h    | 635 ++++++++++++++++++++++++++++++++++++++++
 include/media/v4l2-chip-ident.h |   1 +
 3 files changed, 692 insertions(+), 4 deletions(-)
 create mode 100644 drivers/media/video/ov2643.h

diff --git a/drivers/media/video/ov2640.c b/drivers/media/video/ov2640.c
index 7c44d1f..af6d1a6 100644
--- a/drivers/media/video/ov2640.c
+++ b/drivers/media/video/ov2640.c
@@ -280,6 +280,9 @@ enum ov2640_width {
 	W_UXGA	= 1600,
 };
 
+#define OV2640_SIZE(n, w, h, r) \
+	{.name = n, .width = w , .height = h, .regs = r }
+
 enum ov2640_height {
 	H_QCIF	= 144,
 	H_QVGA	= 240,
@@ -298,6 +301,7 @@ struct ov2640_win_size {
 	const struct regval_list	*regs;
 };
 
+#include "ov2643.h"
 
 struct ov2640_priv {
 	struct v4l2_subdev		subdev;
@@ -563,9 +567,6 @@ static const struct regval_list ov2640_uxga_regs[] = {
 	ENDMARKER,
 };
 
-#define OV2640_SIZE(n, w, h, r) \
-	{.name = n, .width = w , .height = h, .regs = r }
-
 static const struct ov2640_win_size ov2640_supported_win_sizes[] = {
 	OV2640_SIZE("QCIF", W_QCIF, H_QCIF, ov2640_qcif_regs),
 	OV2640_SIZE("QVGA", W_QVGA, H_QVGA, ov2640_qvga_regs),
@@ -761,6 +762,25 @@ static const struct ov2640_win_size *ov2640_select_win(u32 *width, u32 *height)
 	return &ov2640_supported_win_sizes[default_size];
 }
 
+static const struct ov2640_win_size *ov2643_select_win(u32 *width, u32 *height)
+{
+	int i, default_size = ARRAY_SIZE(ov2643_supported_win_sizes) - 1;
+
+	for (i = 0; i < ARRAY_SIZE(ov2643_supported_win_sizes); i++) {
+		if (ov2643_supported_win_sizes[i].width  >= *width &&
+		    ov2643_supported_win_sizes[i].height >= *height) {
+			*width = ov2643_supported_win_sizes[i].width;
+			*height = ov2643_supported_win_sizes[i].height;
+			return &ov2643_supported_win_sizes[i];
+		}
+	}
+
+	*width = ov2643_supported_win_sizes[default_size].width;
+	*height = ov2643_supported_win_sizes[default_size].height;
+	return &ov2643_supported_win_sizes[default_size];
+}
+
+
 static int ov2640_set_params(struct i2c_client *client, u32 *width, u32 *height,
 			     enum v4l2_mbus_pixelcode code)
 {
@@ -829,6 +849,30 @@ err:
 	return ret;
 }
 
+static int ov2643_set_params(struct i2c_client *client, u32 *width, u32 *height,
+			     enum v4l2_mbus_pixelcode code)
+{
+	struct ov2640_priv       *priv = to_ov2640(client);
+	int ret;
+
+	/* select win */
+	priv->win = ov2643_select_win(width, height);
+
+	if (code != V4L2_MBUS_FMT_UYVY8_2X8) {
+		dev_err(&client->dev, "Not suppoted format: %d\n", code);
+		return -1;
+	}
+
+	/* set size win */
+	ret = ov2640_write_array(client, priv->win->regs);
+
+	priv->cfmt_code = code;
+	*width = priv->win->width;
+	*height = priv->win->height;
+
+	return 0;
+}
+
 static int ov2640_g_fmt(struct v4l2_subdev *sd,
 			struct v4l2_mbus_framefmt *mf)
 {
@@ -862,6 +906,7 @@ static int ov2640_s_fmt(struct v4l2_subdev *sd,
 			struct v4l2_mbus_framefmt *mf)
 {
 	struct i2c_client *client = v4l2_get_subdevdata(sd);
+	struct ov2640_priv *priv = to_ov2640(client);
 	int ret;
 
 
@@ -875,7 +920,10 @@ static int ov2640_s_fmt(struct v4l2_subdev *sd,
 		mf->colorspace = V4L2_COLORSPACE_JPEG;
 	}
 
-	ret = ov2640_set_params(client, &mf->width, &mf->height, mf->code);
+	if (priv->model == V4L2_IDENT_OV2640)
+		ret = ov2640_set_params(client, &mf->width, &mf->height, mf->code);
+	else
+		ret = ov2643_set_params(client, &mf->width, &mf->height, mf->code);
 
 	return ret;
 }
@@ -961,6 +1009,10 @@ static int ov2640_video_probe(struct i2c_client *client)
 		devname     = "ov2640";
 		priv->model = V4L2_IDENT_OV2640;
 		break;
+	case PID_OV2643:
+		devname     = "ov2643";
+		priv->model = V4L2_IDENT_OV2643;
+		break;
 	default:
 		dev_err(&client->dev,
 			"Product ID error %x:%x\n", pid, ver);
diff --git a/drivers/media/video/ov2643.h b/drivers/media/video/ov2643.h
new file mode 100644
index 0000000..a4f06ac
--- /dev/null
+++ b/drivers/media/video/ov2643.h
@@ -0,0 +1,635 @@
+#define PID_OV2643	0x2643
+
+const struct regval_list ov2643_yuv_uxga[]= {
+	{0x12, 0x80},
+	{0xc3, 0x1f},
+	{0xc4, 0xff},
+	{0x3d, 0x48},
+	{0xdd, 0xa5},
+	{0x0e, 0xb4},
+	{0x10, 0x0a},
+	{0x11, 0x00},
+	{0x0f, 0x14},
+	{0x21, 0x25},
+	{0x23, 0x0c},
+	{0x12, 0x08},
+	{0x39, 0x10},
+	{0xcd, 0x12},
+	{0x13, 0xff},
+	{0x14, 0xa7},
+	{0x15, 0x42},
+	{0x3c, 0xa4},
+	{0x18, 0x60},
+	{0x19, 0x50},
+	{0x1a, 0xe2},
+	{0x37, 0xe8},
+	{0x16, 0x90},
+	{0x43, 0x00},
+	{0x40, 0xfb},
+	{0xa9, 0x44},
+	{0x2f, 0xec},
+	{0x35, 0x10},
+	{0x36, 0x10},
+	{0x0c, 0x00},
+	{0x0d, 0x00},
+	{0xd0, 0x93},
+	{0xdc, 0x2b},
+	{0xd9, 0x41},
+	{0xd3, 0x02},
+	{0x3d, 0x08},
+	{0x0c, 0x00},
+	{0x18, 0x2c},
+	{0x19, 0x24},
+	{0x1a, 0x71},
+	{0x9b, 0x69},
+	{0x9c, 0x7d},
+	{0x9d, 0x7d},
+	{0x9e, 0x69},
+	{0x35, 0x04},
+	{0x36, 0x04},
+	{0x65, 0x12},
+	{0x66, 0x20},
+	{0x67, 0x39},
+	{0x68, 0x4e},
+	{0x69, 0x62},
+	{0x6a, 0x74},
+	{0x6b, 0x85},
+	{0x6c, 0x92},
+	{0x6d, 0x9e},
+	{0x6e, 0xb2},
+	{0x6f, 0xc0},
+	{0x70, 0xcc},
+	{0x71, 0xe0},
+	{0x72, 0xee},
+	{0x73, 0xf6},
+	{0x74, 0x11},
+	{0xab, 0x20},
+	{0xac, 0x5b},
+	{0xad, 0x05},
+	{0xae, 0x1b},
+	{0xaf, 0x76},
+	{0xb0, 0x90},
+	{0xb1, 0x90},
+	{0xb2, 0x8c},
+	{0xb3, 0x04},
+	{0xb4, 0x98},
+	{0x4c, 0x03},
+	{0x4d, 0x30},
+	{0x4e, 0x02},
+	{0x4f, 0x5c},
+	{0x50, 0x56},
+	{0x51, 0x00},
+	{0x52, 0x66},
+	{0x53, 0x03},
+	{0x54, 0x30},
+	{0x55, 0x02},
+	{0x56, 0x5c},
+	{0x57, 0x40},
+	{0x58, 0x00},
+	{0x59, 0x66},
+	{0x5a, 0x03},
+	{0x5b, 0x20},
+	{0x5c, 0x02},
+	{0x5d, 0x5c},
+	{0x5e, 0x3a},
+	{0x5f, 0x00},
+	{0x60, 0x66},
+	{0x41, 0x1f},
+	{0xb5, 0x01},
+	{0xb6, 0x02},
+	{0xb9, 0x40},
+	{0xba, 0x28},
+	{0xbf, 0x0c},
+	{0xc0, 0x3e},
+	{0xa3, 0x0a},
+	{0xa4, 0x0f},
+	{0xa5, 0x09},
+	{0xa6, 0x16},
+	{0x9f, 0x0a},
+	{0xa0, 0x0f},
+	{0xa7, 0x0a},
+	{0xa8, 0x0f},
+	{0xa1, 0x10},
+	{0xa2, 0x04},
+	{0xa9, 0x04},
+	{0xaa, 0xa6},
+	{0x75, 0x6a},
+	{0x76, 0x11},
+	{0x77, 0x92},
+	{0x78, 0x21},
+	{0x79, 0xe1},
+	{0x7a, 0x02},
+	{0x7c, 0x05},
+	{0x7d, 0x08},
+	{0x7e, 0x08},
+	{0x7f, 0x7c},
+	{0x80, 0x58},
+	{0x81, 0x2a},
+	{0x82, 0xc5},
+	{0x83, 0x46},
+	{0x84, 0x3a},
+	{0x85, 0x54},
+	{0x86, 0x44},
+	{0x87, 0xf8},
+	{0x88, 0x08},
+	{0x89, 0x70},
+	{0x8a, 0xf0},
+	{0x8b, 0xf0},
+	{0x90, 0xe3},
+	{0x93, 0x10},
+	{0x94, 0x20},
+	{0x95, 0x10},
+	{0x96, 0x18},
+	{0x0f, 0x34},
+
+	{0x12, 0x80},
+	{0xc3, 0x1f},
+	{0xc4, 0xff},
+	{0x3d, 0x48},
+	{0xdd, 0xa5},
+	{0x0e, 0xb4},
+	{0x10, 0x0a},
+	{0x11, 0x00},
+	{0x0f, 0x14},
+	{0x21, 0x25},
+	{0x23, 0x0c},
+	{0x12, 0x08},
+	{0x39, 0x10},
+	{0xcd, 0x12},
+	{0x13, 0xff},
+	{0x14, 0xa7},
+	{0x15, 0x42},
+	{0x3c, 0xa4},
+	{0x18, 0x60},
+	{0x19, 0x50},
+	{0x1a, 0xe2},
+	{0x37, 0xe8},
+	{0x16, 0x90},
+	{0x43, 0x00},
+	{0x40, 0xfb},
+	{0xa9, 0x44},
+	{0x2f, 0xec},
+	{0x35, 0x10},
+	{0x36, 0x10},
+	{0x0c, 0x00},
+	{0x0d, 0x20},	/* YUV/RGB format */
+	{0xd0, 0x93},
+	{0xdc, 0x2b},
+	{0xd9, 0x41},
+	{0xd3, 0x02},
+	{0x3d, 0x08},
+	{0x0c, 0x00},
+	{0x18, 0x2c},
+	{0x19, 0x24},
+	{0x1a, 0x71},
+	{0x9b, 0x69},
+	{0x9c, 0x7d},
+	{0x9d, 0x7d},
+	{0x9e, 0x69},
+	{0x35, 0x04},
+	{0x36, 0x04},
+	{0x65, 0x12},
+	{0x66, 0x20},
+	{0x67, 0x39},
+	{0x68, 0x4e},
+	{0x69, 0x62},
+	{0x6a, 0x74},
+	{0x6b, 0x85},
+	{0x6c, 0x92},
+	{0x6d, 0x9e},
+	{0x6e, 0xb2},
+	{0x6f, 0xc0},
+	{0x70, 0xcc},
+	{0x71, 0xe0},
+	{0x72, 0xee},
+	{0x73, 0xf6},
+	{0x74, 0x11},
+	{0xab, 0x20},
+	{0xac, 0x5b},
+	{0xad, 0x05},
+	{0xae, 0x1b},
+	{0xaf, 0x76},
+	{0xb0, 0x90},
+	{0xb1, 0x90},
+	{0xb2, 0x8c},
+	{0xb3, 0x04},
+	{0xb4, 0x98},
+	{0x4c, 0x03},
+	{0x4d, 0x30},
+	{0x4e, 0x02},
+	{0x4f, 0x5c},
+	{0x50, 0x56},
+	{0x51, 0x00},
+	{0x52, 0x66},
+	{0x53, 0x03},
+	{0x54, 0x30},
+	{0x55, 0x02},
+	{0x56, 0x5c},
+	{0x57, 0x40},
+	{0x58, 0x00},
+	{0x59, 0x66},
+	{0x5a, 0x03},
+	{0x5b, 0x20},
+	{0x5c, 0x02},
+	{0x5d, 0x5c},
+	{0x5e, 0x3a},
+	{0x5f, 0x00},
+	{0x60, 0x66},
+	{0x41, 0x1f},
+	{0xb5, 0x01},
+	{0xb6, 0x02},
+	{0xb9, 0x40},
+	{0xba, 0x28},
+	{0xbf, 0x0c},
+	{0xc0, 0x3e},
+	{0xa3, 0x0a},
+	{0xa4, 0x0f},
+	{0xa5, 0x09},
+	{0xa6, 0x16},
+	{0x9f, 0x0a},
+	{0xa0, 0x0f},
+	{0xa7, 0x0a},
+	{0xa8, 0x0f},
+	{0xa1, 0x10},
+	{0xa2, 0x04},
+	{0xa9, 0x04},
+	{0xaa, 0xa6},
+	{0x75, 0x6a},
+	{0x76, 0x11},
+	{0x77, 0x92},
+	{0x78, 0x21},
+	{0x79, 0xe1},
+	{0x7a, 0x02},
+	{0x7c, 0x05},
+	{0x7d, 0x08},
+	{0x7e, 0x08},
+	{0x7f, 0x7c},
+	{0x80, 0x58},
+	{0x81, 0x2a},
+	{0x82, 0xc5},
+	{0x83, 0x46},
+	{0x84, 0x3a},
+	{0x85, 0x54},
+	{0x86, 0x44},
+	{0x87, 0xf8},
+	{0x88, 0x08},
+	{0x89, 0x70},
+	{0x8a, 0xf0},
+	{0x8b, 0xf0},
+	{0x90, 0xe3},
+	{0x93, 0x10},
+	{0x94, 0x20},
+	{0x95, 0x10},
+	{0x96, 0x18},
+	{0x0f, 0x34},
+	{0xFF, 0xFF},
+};
+
+const struct regval_list ov2643_yuv_swvga[]= {
+	{0x12, 0x80},
+	{0xc3, 0x1f},
+	{0xc4, 0xff},
+	{0x3d, 0x48},
+	{0xdd, 0xa5},
+	{0x0e, 0xb4},
+	{0x10, 0x0a},
+	{0x11, 0x00},
+	{0x0f, 0x14},
+	{0x21, 0x25},
+	{0x23, 0x0c},
+	{0x12, 0x08},
+	{0x39, 0x10},
+	{0xcd, 0x12},
+	{0x13, 0xff},
+	{0x14, 0xa7},
+	{0x15, 0x42},
+	{0x3c, 0xa4},
+	{0x18, 0x60},
+	{0x19, 0x50},
+	{0x1a, 0xe2},
+	{0x37, 0xe8},
+	{0x16, 0x90},
+	{0x43, 0x00},
+	{0x40, 0xfb},
+	{0xa9, 0x44},
+	{0x2f, 0xec},
+	{0x35, 0x10},
+	{0x36, 0x10},
+	{0x0c, 0x00},
+	{0x0d, 0x20},	/* YUV/RGB format */
+	{0xd0, 0x93},
+	{0xdc, 0x2b},
+	{0xd9, 0x41},
+	{0xd3, 0x02},
+	{0x3d, 0x08},
+	{0x0c, 0x00},
+	{0x18, 0x2c},
+	{0x19, 0x24},
+	{0x1a, 0x71},
+	{0x9b, 0x69},
+	{0x9c, 0x7d},
+	{0x9d, 0x7d},
+	{0x9e, 0x69},
+	{0x35, 0x04},
+	{0x36, 0x04},
+	{0x65, 0x12},
+	{0x66, 0x20},
+	{0x67, 0x39},
+	{0x68, 0x4e},
+	{0x69, 0x62},
+	{0x6a, 0x74},
+	{0x6b, 0x85},
+	{0x6c, 0x92},
+	{0x6d, 0x9e},
+	{0x6e, 0xb2},
+	{0x6f, 0xc0},
+	{0x70, 0xcc},
+	{0x71, 0xe0},
+	{0x72, 0xee},
+	{0x73, 0xf6},
+	{0x74, 0x11},
+	{0xab, 0x20},
+	{0xac, 0x5b},
+	{0xad, 0x05},
+	{0xae, 0x1b},
+	{0xaf, 0x76},
+	{0xb0, 0x90},
+	{0xb1, 0x90},
+	{0xb2, 0x8c},
+	{0xb3, 0x04},
+	{0xb4, 0x98},
+	{0x4c, 0x03},
+	{0x4d, 0x30},
+	{0x4e, 0x02},
+	{0x4f, 0x5c},
+	{0x50, 0x56},
+	{0x51, 0x00},
+	{0x52, 0x66},
+	{0x53, 0x03},
+	{0x54, 0x30},
+	{0x55, 0x02},
+	{0x56, 0x5c},
+	{0x57, 0x40},
+	{0x58, 0x00},
+	{0x59, 0x66},
+	{0x5a, 0x03},
+	{0x5b, 0x20},
+	{0x5c, 0x02},
+	{0x5d, 0x5c},
+	{0x5e, 0x3a},
+	{0x5f, 0x00},
+	{0x60, 0x66},
+	{0x41, 0x1f},
+	{0xb5, 0x01},
+	{0xb6, 0x02},
+	{0xb9, 0x40},
+	{0xba, 0x28},
+	{0xbf, 0x0c},
+	{0xc0, 0x3e},
+	{0xa3, 0x0a},
+	{0xa4, 0x0f},
+	{0xa5, 0x09},
+	{0xa6, 0x16},
+	{0x9f, 0x0a},
+	{0xa0, 0x0f},
+	{0xa7, 0x0a},
+	{0xa8, 0x0f},
+	{0xa1, 0x10},
+	{0xa2, 0x04},
+	{0xa9, 0x04},
+	{0xaa, 0xa6},
+	{0x75, 0x6a},
+	{0x76, 0x11},
+	{0x77, 0x92},
+	{0x78, 0x21},
+	{0x79, 0xe1},
+	{0x7a, 0x02},
+	{0x7c, 0x05},
+	{0x7d, 0x08},
+	{0x7e, 0x08},
+	{0x7f, 0x7c},
+	{0x80, 0x58},
+	{0x81, 0x2a},
+	{0x82, 0xc5},
+	{0x83, 0x46},
+	{0x84, 0x3a},
+	{0x85, 0x54},
+	{0x86, 0x44},
+	{0x87, 0xf8},
+	{0x88, 0x08},
+	{0x89, 0x70},
+	{0x8a, 0xf0},
+	{0x8b, 0xf0},
+	{0x90, 0xe3},
+	{0x93, 0x10},
+	{0x94, 0x20},
+	{0x95, 0x10},
+	{0x96, 0x18},
+	{0x0f, 0x34},
+
+	{0x3d, 0x48},
+	{0x0e, 0xb8},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x20, 0x01},
+	{0x21, 0x98},
+	{0x22, 0x00},
+	{0x23, 0x06},
+	{0x24, 0x32},
+	{0x25, 0x04},
+	{0x26, 0x25},
+	{0x27, 0x84},
+	{0x28, 0x40},
+	{0x29, 0x04},
+	{0x2a, 0xce},
+	{0x2b, 0x02},
+	{0x2c, 0x8a},
+	{0x12, 0x09},
+	{0x39, 0xd0},
+	{0xcd, 0x13},
+	{0xde, 0x7c},
+	{0x3d, 0x08},
+	{0x15, 0x42},
+	{0xde, 0x7c},
+	{0x0f, 0x24},
+	{0xFF, 0xFF},
+};
+
+const struct regval_list ov2643_yuv_vga[]= {
+	{0x12, 0x80},
+	{0xc3, 0x1f},
+	{0xc4, 0xff},
+	{0x3d, 0x48},
+	{0xdd, 0xa5},
+	{0x0e, 0xb4},
+	{0x10, 0x0a},
+	{0x11, 0x00},
+	{0x0f, 0x14},
+	{0x21, 0x25},
+	{0x23, 0x0c},
+	{0x12, 0x08},
+	{0x39, 0x10},
+	{0xcd, 0x12},
+	{0x13, 0xff},
+	{0x14, 0xa7},
+	{0x15, 0x42},
+	{0x3c, 0xa4},
+	{0x18, 0x60},
+	{0x19, 0x50},
+	{0x1a, 0xe2},
+	{0x37, 0xe8},
+	{0x16, 0x90},
+	{0x43, 0x00},
+	{0x40, 0xfb},
+	{0xa9, 0x44},
+	{0x2f, 0xec},
+	{0x35, 0x10},
+	{0x36, 0x10},
+	{0x0c, 0x00},
+	{0x0d, 0x20},	/* YUV/RGB format */
+	{0xd0, 0x93},
+	{0xdc, 0x2b},
+	{0xd9, 0x41},
+	{0xd3, 0x02},
+	{0x3d, 0x08},
+	{0x0c, 0x00},
+	{0x18, 0x2c},
+	{0x19, 0x24},
+	{0x1a, 0x71},
+	{0x9b, 0x69},
+	{0x9c, 0x7d},
+	{0x9d, 0x7d},
+	{0x9e, 0x69},
+	{0x35, 0x04},
+	{0x36, 0x04},
+	{0x65, 0x12},
+	{0x66, 0x20},
+	{0x67, 0x39},
+	{0x68, 0x4e},
+	{0x69, 0x62},
+	{0x6a, 0x74},
+	{0x6b, 0x85},
+	{0x6c, 0x92},
+	{0x6d, 0x9e},
+	{0x6e, 0xb2},
+	{0x6f, 0xc0},
+	{0x70, 0xcc},
+	{0x71, 0xe0},
+	{0x72, 0xee},
+	{0x73, 0xf6},
+	{0x74, 0x11},
+	{0xab, 0x20},
+	{0xac, 0x5b},
+	{0xad, 0x05},
+	{0xae, 0x1b},
+	{0xaf, 0x76},
+	{0xb0, 0x90},
+	{0xb1, 0x90},
+	{0xb2, 0x8c},
+	{0xb3, 0x04},
+	{0xb4, 0x98},
+	{0x4c, 0x03},
+	{0x4d, 0x30},
+	{0x4e, 0x02},
+	{0x4f, 0x5c},
+	{0x50, 0x56},
+	{0x51, 0x00},
+	{0x52, 0x66},
+	{0x53, 0x03},
+	{0x54, 0x30},
+	{0x55, 0x02},
+	{0x56, 0x5c},
+	{0x57, 0x40},
+	{0x58, 0x00},
+	{0x59, 0x66},
+	{0x5a, 0x03},
+	{0x5b, 0x20},
+	{0x5c, 0x02},
+	{0x5d, 0x5c},
+	{0x5e, 0x3a},
+	{0x5f, 0x00},
+	{0x60, 0x66},
+	{0x41, 0x1f},
+	{0xb5, 0x01},
+	{0xb6, 0x02},
+	{0xb9, 0x40},
+	{0xba, 0x28},
+	{0xbf, 0x0c},
+	{0xc0, 0x3e},
+	{0xa3, 0x0a},
+	{0xa4, 0x0f},
+	{0xa5, 0x09},
+	{0xa6, 0x16},
+	{0x9f, 0x0a},
+	{0xa0, 0x0f},
+	{0xa7, 0x0a},
+	{0xa8, 0x0f},
+	{0xa1, 0x10},
+	{0xa2, 0x04},
+	{0xa9, 0x04},
+	{0xaa, 0xa6},
+	{0x75, 0x6a},
+	{0x76, 0x11},
+	{0x77, 0x92},
+	{0x78, 0x21},
+	{0x79, 0xe1},
+	{0x7a, 0x02},
+	{0x7c, 0x05},
+	{0x7d, 0x08},
+	{0x7e, 0x08},
+	{0x7f, 0x7c},
+	{0x80, 0x58},
+	{0x81, 0x2a},
+	{0x82, 0xc5},
+	{0x83, 0x46},
+	{0x84, 0x3a},
+	{0x85, 0x54},
+	{0x86, 0x44},
+	{0x87, 0xf8},
+	{0x88, 0x08},
+	{0x89, 0x70},
+	{0x8a, 0xf0},
+	{0x8b, 0xf0},
+	{0x90, 0xe3},
+	{0x93, 0x10},
+	{0x94, 0x20},
+	{0x95, 0x10},
+	{0x96, 0x18},
+	{0x0f, 0x34},
+
+	{0x13, 0x00},
+	{0x3d, 0x48}, 
+	{0x0e, 0xb8}, 
+	{0x20, 0x02},  
+	{0x21, 0x18}, 
+	{0x22, 0x00}, 
+	{0x23, 0x42},
+	{0x24, 0x28}, 
+	{0x25, 0x04},
+	{0x26, 0x1e}, 
+	{0x27, 0x04},
+	{0x28, 0x40},
+	{0x29, 0x04},
+	{0x2a, 0xce},
+	{0x2b, 0x02},
+	{0x2c, 0x8a},
+	{0x12, 0x09},
+	{0x39, 0xd0},
+	{0xcd, 0x13},
+	{0xde, 0x7c},
+	{0x3d, 0x08},
+	{0x13, 0xff},
+	{0x15, 0x42},
+	{0xFF, 0xFF},
+};
+
+static const struct ov2640_win_size ov2643_supported_win_sizes[] = {
+	OV2640_SIZE("VGA", W_VGA, H_VGA, ov2643_yuv_vga),
+	OV2640_SIZE("SWVGA", W_XGA, H_SVGA, ov2643_yuv_swvga),
+	OV2640_SIZE("UXGA", W_UXGA, H_UXGA, ov2643_yuv_uxga),
+};
\ No newline at end of file
diff --git a/include/media/v4l2-chip-ident.h b/include/media/v4l2-chip-ident.h
index 58f914a..f4cd41f 100644
--- a/include/media/v4l2-chip-ident.h
+++ b/include/media/v4l2-chip-ident.h
@@ -77,6 +77,7 @@ enum {
 	V4L2_IDENT_OV2640 = 259,
 	V4L2_IDENT_OV9740 = 260,
 	V4L2_IDENT_OV5642 = 261,
+	V4L2_IDENT_OV2643 = 262,
 
 	/* module saa7146: reserved range 300-309 */
 	V4L2_IDENT_SAA7146 = 300,
-- 
1.8.4.rc3

